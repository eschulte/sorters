#!/bin/bash
#
# Usage: blackscholes-test EXECUTABLE [OPTIONS...]
#
# EXECUTABLE -- executable of blackscholes to test
#
# OPTIONS:
# -t,--test --- the specific test to run
#
#               default: run all tests and print the number of tests
#                        which passed.  If this is neutral, then exit
#                        with 0.
#
# -l,--limit -- optionally specify limit script
#
#               default: use the limit located next to this script
#
# -r,--raw ---- show the raw error
#
BASE="$(dirname $0)"
TEST=""
RAW=""
LIMIT="$BASE/limit"
declare -a INPUTS
declare -a OUTPUTS
HELP_TEXT=$(cat "$0" \
        |sed '/^[^#]/q' \
        |head -n -1 \
        |tail -n +3 \
        |sed -e :a -e '/^\n*$/{$d;N;ba' -e '}' \
        |cut -c3-)
if [ $(grep "\-h" <(echo "$1")) ];then echo "$HELP_TEXT"; exit 0; fi
PROG="$(dirname $1)/$(basename $1)"; shift;

eval set -- $(getopt -o ht:l:r -l help,test:,limit:,raw -- "$@" \
              || echo "$HELP_TEXT" && exit 1;)

while [ $# -gt 0 ];do
    case $1 in
        -h|--help)  echo "$HELP_TEXT" && exit 0;;
        -t|--test)  TEST="$2"; shift;;
        -l|--limit) LIMIT="$2"; shift;;
        -r|--raw)   RAW="yes";;
        (--) shift; break;;
        (-*) error "unrecognized option $1";;
        (*)  break;;
    esac
    shift
done

AWK_CMD=''
AWK_CMD+='function abs(x){return ((x < 0.0) ? -x : x)}'
AWK_CMD+='BEGIN{ diff=0; }'
AWK_CMD+='{ diff+=abs($1-$2); }'
AWK_CMD+='END { print diff }'
num_diff(){ # diff of numerical closeness
    paste $1 $2|awk "$AWK_CMD"; }

run(){ # return the difference between oracle and program output
    # $LIMIT $PROG 2 <(echo "${INPUTS[$1]}") /dev/stdout|egrep "^[[:digit:]]" >&2
    num_diff <($LIMIT $PROG 2 <(echo "${INPUTS[$1]}") /dev/stdout|egrep "^[[:digit:]]") <(echo "${OUTPUTS[$1]}"); }

INPUTS[0]="1
42.00 40.00 0.1000 0.00 0.20 0.50 C 0.00 4.759423036851750055"
OUTPUTS[0]="1
4.759427070617675781"

INPUTS[1]="2
42.00 40.00 0.1000 0.00 0.20 0.50 C 0.00 4.759423036851750055
42.00 40.00 0.1000 0.00 0.20 0.50 P 0.00 0.808600016880314021"
OUTPUTS[1]="2
4.759427070617675781
0.808602213859558105"

INPUTS[2]="4
42.00 40.00 0.1000 0.00 0.20 0.50 C 0.00 4.759423036851750055
42.00 40.00 0.1000 0.00 0.20 0.50 P 0.00 0.808600016880314021
100.00 100.00 0.0500 0.00 0.15 1.00 P 0.00 3.714602051381290071
100.00 100.00 0.0500 0.00 0.15 1.00 C 0.00 8.591659601309890704"
OUTPUTS[2]="4
4.759427070617675781
0.808602213859558105
3.714604377746582031
8.591664314270019531"

INPUTS[3]="8
42.00 40.00 0.1000 0.00 0.20 0.50 C 0.00 4.759423036851750055
42.00 40.00 0.1000 0.00 0.20 0.50 P 0.00 0.808600016880314021
100.00 100.00 0.0500 0.00 0.15 1.00 P 0.00 3.714602051381290071
100.00 100.00 0.0500 0.00 0.15 1.00 C 0.00 8.591659601309890704
60.00 65.00 0.0800 0.00 0.30 0.25 C 0.00 2.133371966735750025
100.00 90.00 0.1000 0.00 0.10 0.10 C 0.00 10.895610714793999563
100.00 90.00 0.1000 0.00 0.10 0.50 C 0.00 14.421570828843300660
100.00 90.00 0.1000 0.00 0.10 1.00 C 0.00 18.630859120667498274"
OUTPUTS[3]="8
4.759427070617675781
0.808602213859558105
3.714604377746582031
8.591664314270019531
2.133372068405151367
10.895611763000488281
14.421572685241699219
18.630857467651367188"

INPUTS[4]="16
42.00 40.00 0.1000 0.00 0.20 0.50 C 0.00 4.759423036851750055
42.00 40.00 0.1000 0.00 0.20 0.50 P 0.00 0.808600016880314021
100.00 100.00 0.0500 0.00 0.15 1.00 P 0.00 3.714602051381290071
100.00 100.00 0.0500 0.00 0.15 1.00 C 0.00 8.591659601309890704
60.00 65.00 0.0800 0.00 0.30 0.25 C 0.00 2.133371966735750025
100.00 90.00 0.1000 0.00 0.10 0.10 C 0.00 10.895610714793999563
100.00 90.00 0.1000 0.00 0.10 0.50 C 0.00 14.421570828843300660
100.00 90.00 0.1000 0.00 0.10 1.00 C 0.00 18.630859120667498274
100.00 100.00 0.1000 0.00 0.10 0.10 C 0.00 1.814984118378420108
100.00 100.00 0.1000 0.00 0.10 0.50 C 0.00 5.850273604284979889
100.00 100.00 0.1000 0.00 0.10 1.00 C 0.00 10.308147243666800463
100.00 110.00 0.1000 0.00 0.10 0.10 C 0.00 0.003523074865584340
100.00 110.00 0.1000 0.00 0.10 0.50 C 0.00 1.140722843827409960
100.00 110.00 0.1000 0.00 0.10 1.00 C 0.00 4.216747020308850402
100.00 90.00 0.1000 0.00 0.25 0.10 C 0.00 11.135244618346700207
100.00 90.00 0.1000 0.00 0.25 0.50 C 0.00 16.092638844092299166"
OUTPUTS[4]="16
4.759427070617675781
0.808602213859558105
3.714604377746582031
8.591664314270019531
2.133372068405151367
10.895611763000488281
14.421572685241699219
18.630857467651367188
1.814987421035766602
5.850282669067382812
10.308148384094238281
0.003522987710312009
1.140724420547485352
4.216758251190185547
11.135246276855468750
16.092639923095703125"

# Actually run
AWK_NEAR='{print ($1 < 0.0000000001) ? 0 : 1}'
if [ -z "$TEST" ];then
    count=0
    for i in $(seq 0 $((${#INPUTS[@]} - 1)));do
        if [ -z "$RAW" ];then
            if [ $(run $i|awk "$AWK_NEAR") -eq 0 ];then
                count=$(($count + 1));
            fi
        else
            run $i;
        fi
    done
    if [ -z "$RAW" ];then echo "$count";fi
    exit 0
else
    if [ -z "$RAW" ];then
        if [ $(run $TEST|awk "$AWK_NEAR") -eq 0 ];then exit 0;fi
    else
        run $TEST
    fi
fi
exit 1
