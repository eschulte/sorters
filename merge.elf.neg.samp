/* 
 * Command line: opannotate -a coverage.neg 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 800 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400792 <mergesort>: /* mergesort total:    614 38.1603 */
    15  0.9323 :  400792:	push   %rbp
    13  0.8080 :  400793:	mov    %rsp,%rbp
     1  0.0622 :  400796:	push   %rbx
     7  0.4351 :  400797:	sub    $0x48,%rsp
     6  0.3729 :  40079b:	mov    %rdi,-0x48(%rbp)
    15  0.9323 :  40079f:	mov    %esi,-0x4c(%rbp)
    16  0.9944 :  4007a2:	cmpl   $0x1,-0x4c(%rbp)
    17  1.0566 :  4007a6:	ja     4007b1 <mergesort+0x1f>
    32  1.9888 :  4007a8:	mov    -0x48(%rbp),%rax
    20  1.2430 :  4007ac:	jmpq   400929 <mergesort+0x197>
    27  1.6781 :  4007b1:	mov    -0x4c(%rbp),%eax
    22  1.3673 :  4007b4:	shr    %eax
     2  0.1243 :  4007b6:	mov    %eax,-0x14(%rbp)
     3  0.1865 :  4007b9:	mov    -0x14(%rbp),%eax
    17  1.0566 :  4007bc:	mov    -0x4c(%rbp),%edx
               :  4007bf:	mov    %edx,%ecx
     1  0.0622 :  4007c1:	sub    %eax,%ecx
     6  0.3729 :  4007c3:	mov    %ecx,%eax
     4  0.2486 :  4007c5:	mov    %eax,%eax
     3  0.1865 :  4007c7:	shl    $0x2,%rax
     3  0.1865 :  4007cb:	mov    %rax,%rdi
     2  0.1243 :  4007ce:	callq  400530 <malloc@plt>
     6  0.3729 :  4007d3:	mov    %rax,-0x28(%rbp)
     5  0.3108 :  4007d7:	mov    -0x14(%rbp),%eax
     1  0.0622 :  4007da:	shl    $0x2,%rax
               :  4007de:	mov    %rax,%rdi
     1  0.0622 :  4007e1:	callq  400530 <malloc@plt>
     6  0.3729 :  4007e6:	mov    %rax,-0x30(%rbp)
     3  0.1865 :  4007ea:	mov    -0x14(%rbp),%eax
     4  0.2486 :  4007ed:	mov    -0x4c(%rbp),%edx
               :  4007f0:	mov    %edx,%ebx
     2  0.1243 :  4007f2:	sub    %eax,%ebx
     2  0.1243 :  4007f4:	mov    %ebx,%eax
     2  0.1243 :  4007f6:	mov    %eax,%eax
     4  0.2486 :  4007f8:	lea    0x0(,%rax,4),%rdx
     3  0.1865 :  400800:	mov    -0x48(%rbp),%rcx
               :  400804:	mov    -0x28(%rbp),%rax
               :  400808:	mov    %rcx,%rsi
               :  40080b:	mov    %rax,%rdi
     6  0.3729 :  40080e:	callq  400570 <memcpy@plt>
    23  1.4295 :  400813:	mov    -0x14(%rbp),%eax
    11  0.6837 :  400816:	lea    0x0(,%rax,4),%rdx
     2  0.1243 :  40081e:	mov    -0x14(%rbp),%eax
               :  400821:	mov    -0x4c(%rbp),%ecx
     1  0.0622 :  400824:	mov    %ecx,%ebx
               :  400826:	sub    %eax,%ebx
     2  0.1243 :  400828:	mov    %ebx,%eax
     1  0.0622 :  40082a:	mov    %eax,%eax
     3  0.1865 :  40082c:	shl    $0x2,%rax
     1  0.0622 :  400830:	mov    %rax,%rcx
     6  0.3729 :  400833:	add    -0x48(%rbp),%rcx
     3  0.1865 :  400837:	mov    -0x30(%rbp),%rax
               :  40083b:	mov    %rcx,%rsi
     2  0.1243 :  40083e:	mov    %rax,%rdi
               :  400841:	callq  400570 <memcpy@plt>
    10  0.6215 :  400846:	mov    -0x14(%rbp),%eax
    12  0.7458 :  400849:	mov    -0x4c(%rbp),%edx
               :  40084c:	sub    %eax,%edx
     6  0.3729 :  40084e:	mov    -0x28(%rbp),%rax
               :  400852:	mov    %edx,%esi
               :  400854:	mov    %rax,%rdi
     1  0.0622 :  400857:	callq  400792 <mergesort>
     6  0.3729 :  40085c:	mov    %rax,-0x38(%rbp)
    16  0.9944 :  400860:	mov    -0x14(%rbp),%edx
               :  400863:	mov    -0x30(%rbp),%rax
               :  400867:	mov    %edx,%esi
     3  0.1865 :  400869:	mov    %rax,%rdi
               :  40086c:	callq  400792 <mergesort>
     9  0.5594 :  400871:	mov    %rax,-0x40(%rbp)
     4  0.2486 :  400875:	mov    -0x14(%rbp),%eax
               :  400878:	mov    -0x4c(%rbp),%edx
               :  40087b:	mov    %edx,%ecx
     3  0.1865 :  40087d:	sub    %eax,%ecx
     2  0.1243 :  40087f:	mov    %ecx,%eax
     1  0.0622 :  400881:	sub    $0x1,%eax
     3  0.1865 :  400884:	mov    %eax,%eax
     7  0.4351 :  400886:	shl    $0x2,%rax
     3  0.1865 :  40088a:	add    -0x38(%rbp),%rax
     3  0.1865 :  40088e:	mov    (%rax),%edx
    16  0.9944 :  400890:	mov    -0x40(%rbp),%rax
               :  400894:	mov    (%rax),%eax
               :  400896:	cmp    %eax,%edx
               :  400898:	jg     4008a4 <mergesort+0x112>
     8  0.4972 :  40089a:	mov    -0x48(%rbp),%rax
     3  0.1865 :  40089e:	mov    %rax,-0x20(%rbp)
               :  4008a2:	jmp    4008c5 <mergesort+0x133>
    11  0.6837 :  4008a4:	mov    -0x14(%rbp),%eax
     3  0.1865 :  4008a7:	mov    -0x4c(%rbp),%edx
               :  4008aa:	mov    %edx,%esi
               :  4008ac:	sub    %eax,%esi
     3  0.1865 :  4008ae:	mov    -0x14(%rbp),%ecx
               :  4008b1:	mov    -0x40(%rbp),%rdx
               :  4008b5:	mov    -0x38(%rbp),%rax
               :  4008b9:	mov    %rax,%rdi
     5  0.3108 :  4008bc:	callq  400664 <locmerge>
     9  0.5594 :  4008c1:	mov    %rax,-0x20(%rbp)
    13  0.8080 :  4008c5:	mov    -0x28(%rbp),%rax
     3  0.1865 :  4008c9:	cmp    -0x38(%rbp),%rax
               :  4008cd:	jne    4008dd <mergesort+0x14b>
     3  0.1865 :  4008cf:	mov    -0x38(%rbp),%rax
     4  0.2486 :  4008d3:	mov    %rax,%rdi
               :  4008d6:	callq  400550 <free@plt>
     2  0.1243 :  4008db:	jmp    4008f5 <mergesort+0x163>
    15  0.9323 :  4008dd:	mov    -0x38(%rbp),%rax
     9  0.5594 :  4008e1:	mov    %rax,%rdi
     2  0.1243 :  4008e4:	callq  400550 <free@plt>
               :  4008e9:	mov    -0x28(%rbp),%rax
     1  0.0622 :  4008ed:	mov    %rax,%rdi
               :  4008f0:	callq  400550 <free@plt>
     6  0.3729 :  4008f5:	mov    -0x30(%rbp),%rax
     6  0.3729 :  4008f9:	cmp    -0x40(%rbp),%rax
               :  4008fd:	jne    40090d <mergesort+0x17b>
    10  0.6215 :  4008ff:	mov    -0x40(%rbp),%rax
    10  0.6215 :  400903:	mov    %rax,%rdi
     4  0.2486 :  400906:	callq  400550 <free@plt>
     2  0.1243 :  40090b:	jmp    400925 <mergesort+0x193>
    11  0.6837 :  40090d:	mov    -0x40(%rbp),%rax
    10  0.6215 :  400911:	mov    %rax,%rdi
               :  400914:	callq  400550 <free@plt>
               :  400919:	mov    -0x30(%rbp),%rax
               :  40091d:	mov    %rax,%rdi
               :  400920:	callq  400550 <free@plt>
     1  0.0622 :  400925:	mov    -0x20(%rbp),%rax
     8  0.4972 :  400929:	add    $0x48,%rsp
               :  40092d:	pop    %rbx
    10  0.6215 :  40092e:	leaveq 
     5  0.3108 :  40092f:	retq   
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400664 <locmerge>: /* locmerge total:    461 28.6513 */
     3  0.1865 :  400664:	push   %rbp
     7  0.4351 :  400665:	mov    %rsp,%rbp
     4  0.2486 :  400668:	sub    $0x40,%rsp
               :  40066c:	mov    %rdi,-0x28(%rbp)
     6  0.3729 :  400670:	mov    %esi,-0x2c(%rbp)
     3  0.1865 :  400673:	mov    %rdx,-0x38(%rbp)
     1  0.0622 :  400677:	mov    %ecx,-0x3c(%rbp)
               :  40067a:	movl   $0x0,-0xc(%rbp)
     2  0.1243 :  400681:	mov    -0xc(%rbp),%eax
    19  1.1809 :  400684:	mov    %eax,-0x8(%rbp)
     1  0.0622 :  400687:	mov    -0x8(%rbp),%eax
    10  0.6215 :  40068a:	mov    %eax,-0x4(%rbp)
     6  0.3729 :  40068d:	mov    -0x3c(%rbp),%eax
     1  0.0622 :  400690:	mov    -0x2c(%rbp),%edx
               :  400693:	lea    (%rdx,%rax,1),%eax
               :  400696:	mov    %eax,%eax
     1  0.0622 :  400698:	shl    $0x2,%rax
     2  0.1243 :  40069c:	mov    %rax,%rdi
               :  40069f:	callq  400530 <malloc@plt>
     8  0.4972 :  4006a4:	mov    %rax,-0x18(%rbp)
     5  0.3108 :  4006a8:	jmp    400716 <locmerge+0xb2>
     9  0.5594 :  4006aa:	mov    -0x4(%rbp),%eax
    19  1.1809 :  4006ad:	shl    $0x2,%rax
     6  0.3729 :  4006b1:	add    -0x28(%rbp),%rax
     2  0.1243 :  4006b5:	mov    (%rax),%edx
    29  1.8024 :  4006b7:	mov    -0x8(%rbp),%eax
               :  4006ba:	shl    $0x2,%rax
     1  0.0622 :  4006be:	add    -0x38(%rbp),%rax
               :  4006c2:	mov    (%rax),%eax
    11  0.6837 :  4006c4:	cmp    %eax,%edx
               :  4006c6:	jg     4006f0 <locmerge+0x8c>
    29  1.8024 :  4006c8:	mov    -0xc(%rbp),%eax
    17  1.0566 :  4006cb:	shl    $0x2,%rax
     1  0.0622 :  4006cf:	add    -0x18(%rbp),%rax
     2  0.1243 :  4006d3:	mov    -0x4(%rbp),%edx
     1  0.0622 :  4006d6:	shl    $0x2,%rdx
               :  4006da:	add    -0x28(%rbp),%rdx
               :  4006de:	mov    (%rdx),%edx
     7  0.4351 :  4006e0:	mov    %edx,(%rax)
     3  0.1865 :  4006e2:	addl   $0x1,-0xc(%rbp)
               :  4006e6:	addl   $0x1,-0x4(%rbp)
     1  0.0622 :  4006ea:	subl   $0x1,-0x2c(%rbp)
     1  0.0622 :  4006ee:	jmp    400716 <locmerge+0xb2>
    15  0.9323 :  4006f0:	mov    -0xc(%rbp),%eax
    10  0.6215 :  4006f3:	shl    $0x2,%rax
               :  4006f7:	add    -0x18(%rbp),%rax
     4  0.2486 :  4006fb:	mov    -0x8(%rbp),%edx
     4  0.2486 :  4006fe:	shl    $0x2,%rdx
               :  400702:	add    -0x38(%rbp),%rdx
     2  0.1243 :  400706:	mov    (%rdx),%edx
     6  0.3729 :  400708:	mov    %edx,(%rax)
    12  0.7458 :  40070a:	addl   $0x1,-0xc(%rbp)
     2  0.1243 :  40070e:	addl   $0x1,-0x8(%rbp)
     1  0.0622 :  400712:	subl   $0x1,-0x3c(%rbp)
    10  0.6215 :  400716:	cmpl   $0x0,-0x2c(%rbp)
    19  1.1809 :  40071a:	je     400722 <locmerge+0xbe>
    19  1.1809 :  40071c:	cmpl   $0x0,-0x3c(%rbp)
    12  0.7458 :  400720:	jne    4006aa <locmerge+0x46>
    16  0.9944 :  400722:	cmpl   $0x0,-0x2c(%rbp)
    30  1.8645 :  400726:	je     400757 <locmerge+0xf3>
    10  0.6215 :  400728:	mov    -0x2c(%rbp),%eax
     8  0.4972 :  40072b:	lea    0x0(,%rax,4),%rdx
               :  400733:	mov    -0x4(%rbp),%eax
               :  400736:	shl    $0x2,%rax
     3  0.1865 :  40073a:	mov    %rax,%rcx
     2  0.1243 :  40073d:	add    -0x28(%rbp),%rcx
     1  0.0622 :  400741:	mov    -0xc(%rbp),%eax
     1  0.0622 :  400744:	shl    $0x2,%rax
               :  400748:	add    -0x18(%rbp),%rax
     1  0.0622 :  40074c:	mov    %rcx,%rsi
     1  0.0622 :  40074f:	mov    %rax,%rdi
     3  0.1865 :  400752:	callq  400570 <memcpy@plt>
    16  0.9944 :  400757:	cmpl   $0x0,-0x3c(%rbp)
    13  0.8080 :  40075b:	je     40078c <locmerge+0x128>
     2  0.1243 :  40075d:	mov    -0x3c(%rbp),%eax
     2  0.1243 :  400760:	lea    0x0(,%rax,4),%rdx
               :  400768:	mov    -0x8(%rbp),%eax
               :  40076b:	shl    $0x2,%rax
               :  40076f:	mov    %rax,%rcx
               :  400772:	add    -0x38(%rbp),%rcx
     1  0.0622 :  400776:	mov    -0xc(%rbp),%eax
               :  400779:	shl    $0x2,%rax
               :  40077d:	add    -0x18(%rbp),%rax
               :  400781:	mov    %rcx,%rsi
               :  400784:	mov    %rax,%rdi
               :  400787:	callq  400570 <memcpy@plt>
     2  0.1243 :  40078c:	mov    -0x18(%rbp),%rax
     6  0.3729 :  400790:	leaveq 
     9  0.5594 :  400791:	retq   
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400930 <main>: /* main total:    293 18.2101 */
     8  0.4972 :  400930:	push   %rbp
     4  0.2486 :  400931:	mov    %rsp,%rbp
               :  400934:	push   %rbx
     1  0.0622 :  400935:	sub    $0x28,%rsp
               :  400939:	mov    %edi,-0x24(%rbp)
               :  40093c:	mov    %rsi,-0x30(%rbp)
     1  0.0622 :  400940:	mov    -0x24(%rbp),%eax
     1  0.0622 :  400943:	cltq   
     1  0.0622 :  400945:	shl    $0x2,%rax
               :  400949:	sub    $0x1,%rax
               :  40094d:	mov    %rax,%rdi
               :  400950:	callq  400530 <malloc@plt>
     8  0.4972 :  400955:	mov    %rax,-0x20(%rbp)
    11  0.6837 :  400959:	movl   $0x1,-0x14(%rbp)
     3  0.1865 :  400960:	jmp    400994 <main+0x64>
    21  1.3052 :  400962:	mov    -0x14(%rbp),%eax
     8  0.4972 :  400965:	cltq   
     1  0.0622 :  400967:	sub    $0x1,%rax
     6  0.3729 :  40096b:	shl    $0x2,%rax
     6  0.3729 :  40096f:	mov    %rax,%rbx
     3  0.1865 :  400972:	add    -0x20(%rbp),%rbx
     3  0.1865 :  400976:	mov    -0x14(%rbp),%eax
               :  400979:	cltq   
               :  40097b:	shl    $0x3,%rax
     1  0.0622 :  40097f:	add    -0x30(%rbp),%rax
     6  0.3729 :  400983:	mov    (%rax),%rax
    18  1.1187 :  400986:	mov    %rax,%rdi
     3  0.1865 :  400989:	callq  400560 <atoi@plt>
     8  0.4972 :  40098e:	mov    %eax,(%rbx)
    11  0.6837 :  400990:	addl   $0x1,-0x14(%rbp)
    10  0.6215 :  400994:	mov    -0x14(%rbp),%eax
    18  1.1187 :  400997:	cmp    -0x24(%rbp),%eax
               :  40099a:	jl     400962 <main+0x32>
     8  0.4972 :  40099c:	mov    -0x24(%rbp),%eax
     3  0.1865 :  40099f:	sub    $0x1,%eax
     1  0.0622 :  4009a2:	mov    %eax,%edx
     1  0.0622 :  4009a4:	mov    -0x20(%rbp),%rax
               :  4009a8:	mov    %edx,%esi
     1  0.0622 :  4009aa:	mov    %rax,%rdi
               :  4009ad:	callq  400792 <mergesort>
     1  0.0622 :  4009b2:	mov    %rax,-0x20(%rbp)
     2  0.1243 :  4009b6:	movl   $0x1,-0x14(%rbp)
               :  4009bd:	jmp    4009ea <main+0xba>
    12  0.7458 :  4009bf:	mov    -0x14(%rbp),%eax
     5  0.3108 :  4009c2:	cltq   
               :  4009c4:	sub    $0x1,%rax
     3  0.1865 :  4009c8:	shl    $0x2,%rax
     5  0.3108 :  4009cc:	add    -0x20(%rbp),%rax
     5  0.3108 :  4009d0:	mov    (%rax),%edx
    23  1.4295 :  4009d2:	mov    $0x400afc,%eax
               :  4009d7:	mov    %edx,%esi
     5  0.3108 :  4009d9:	mov    %rax,%rdi
               :  4009dc:	mov    $0x0,%eax
               :  4009e1:	callq  400510 <printf@plt>
     6  0.3729 :  4009e6:	addl   $0x1,-0x14(%rbp)
    14  0.8701 :  4009ea:	mov    -0x14(%rbp),%eax
    21  1.3052 :  4009ed:	cmp    -0x24(%rbp),%eax
               :  4009f0:	jl     4009bf <main+0x8f>
     6  0.3729 :  4009f2:	mov    $0xa,%edi
     4  0.2486 :  4009f7:	callq  400520 <putchar@plt>
     2  0.1243 :  4009fc:	mov    $0x0,%eax
     1  0.0622 :  400a01:	add    $0x28,%rsp
     1  0.0622 :  400a05:	pop    %rbx
     1  0.0622 :  400a06:	leaveq 
     1  0.0622 :  400a07:	retq   
               :  400a08:	nop
               :  400a09:	nop
               :  400a0a:	nop
               :  400a0b:	nop
               :  400a0c:	nop
               :  400a0d:	nop
               :  400a0e:	nop
               :  400a0f:	nop
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000004005d0 <__do_global_dtors_aux>: /* __do_global_dtors_aux total:     50  3.1075 */
    12  0.7458 :  4005d0:	push   %rbp
     5  0.3108 :  4005d1:	mov    %rsp,%rbp
               :  4005d4:	push   %rbx
     2  0.1243 :  4005d5:	sub    $0x8,%rsp
               :  4005d9:	cmpb   $0x0,0x200a68(%rip)        # 601048 <__bss_start>
     8  0.4972 :  4005e0:	jne    40062d <__do_global_dtors_aux+0x5d>
    10  0.6215 :  4005e2:	mov    $0x600e40,%ebx
     1  0.0622 :  4005e7:	mov    0x200a62(%rip),%rax        # 601050 <dtor_idx.6559>
               :  4005ee:	sub    $0x600e38,%rbx
               :  4005f5:	sar    $0x3,%rbx
               :  4005f9:	sub    $0x1,%rbx
               :  4005fd:	cmp    %rbx,%rax
     2  0.1243 :  400600:	jae    400626 <__do_global_dtors_aux+0x56>
               :  400602:	nopw   0x0(%rax,%rax,1)
               :  400608:	add    $0x1,%rax
               :  40060c:	mov    %rax,0x200a3d(%rip)        # 601050 <dtor_idx.6559>
               :  400613:	callq  *0x600e38(,%rax,8)
               :  40061a:	mov    0x200a2f(%rip),%rax        # 601050 <dtor_idx.6559>
               :  400621:	cmp    %rbx,%rax
               :  400624:	jb     400608 <__do_global_dtors_aux+0x38>
     1  0.0622 :  400626:	movb   $0x1,0x200a1b(%rip)        # 601048 <__bss_start>
     4  0.2486 :  40062d:	add    $0x8,%rsp
               :  400631:	pop    %rbx
     4  0.2486 :  400632:	leaveq 
     1  0.0622 :  400633:	retq   
               :  400634:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400580 <_start>: /* _start total:     45  2.7968 */
     6  0.3729 :  400580:	xor    %ebp,%ebp
    30  1.8645 :  400582:	mov    %rdx,%r9
     1  0.0622 :  400585:	pop    %rsi
               :  400586:	mov    %rsp,%rdx
               :  400589:	and    $0xfffffffffffffff0,%rsp
               :  40058d:	push   %rax
     4  0.2486 :  40058e:	push   %rsp
     4  0.2486 :  40058f:	mov    $0x400aa0,%r8
               :  400596:	mov    $0x400a10,%rcx
               :  40059d:	mov    $0x400930,%rdi
               :  4005a4:	callq  400540 <__libc_start_main@plt>
               :  4005a9:	hlt    
               :  4005aa:	nop
               :  4005ab:	nop
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400640 <frame_dummy>: /* frame_dummy total:     41  2.5482 */
    12  0.7458 :  400640:	cmpq   $0x0,0x200800(%rip)        # 600e48 <__JCR_END__>
    17  1.0566 :  400648:	push   %rbp
               :  400649:	mov    %rsp,%rbp
               :  40064c:	je     400660 <frame_dummy+0x20>
               :  40064e:	mov    $0x0,%eax
               :  400653:	test   %rax,%rax
               :  400656:	je     400660 <frame_dummy+0x20>
               :  400658:	mov    $0x600e48,%edi
               :  40065d:	leaveq 
               :  40065e:	jmpq   *%rax
     5  0.3108 :  400660:	leaveq 
     7  0.4351 :  400661:	retq   
               :  400662:	nop
               :  400663:	nop
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400a10 <__libc_csu_init>: /* __libc_csu_init total:     33  2.0510 */
    11  0.6837 :  400a10:	mov    %rbp,-0x28(%rsp)
     7  0.4351 :  400a15:	mov    %r12,-0x20(%rsp)
               :  400a1a:	lea    0x200403(%rip),%rbp        # 600e24 <__init_array_end>
               :  400a21:	lea    0x2003fc(%rip),%r12        # 600e24 <__init_array_end>
               :  400a28:	mov    %r13,-0x18(%rsp)
               :  400a2d:	mov    %r14,-0x10(%rsp)
     2  0.1243 :  400a32:	mov    %r15,-0x8(%rsp)
               :  400a37:	mov    %rbx,-0x30(%rsp)
               :  400a3c:	sub    $0x38,%rsp
               :  400a40:	sub    %r12,%rbp
     2  0.1243 :  400a43:	mov    %edi,%r13d
               :  400a46:	mov    %rsi,%r14
     1  0.0622 :  400a49:	sar    $0x3,%rbp
               :  400a4d:	mov    %rdx,%r15
               :  400a50:	callq  4004e8 <_init>
               :  400a55:	test   %rbp,%rbp
               :  400a58:	je     400a76 <__libc_csu_init+0x66>
               :  400a5a:	xor    %ebx,%ebx
               :  400a5c:	nopl   0x0(%rax)
               :  400a60:	mov    %r15,%rdx
               :  400a63:	mov    %r14,%rsi
               :  400a66:	mov    %r13d,%edi
               :  400a69:	callq  *(%r12,%rbx,8)
               :  400a6d:	add    $0x1,%rbx
               :  400a71:	cmp    %rbp,%rbx
               :  400a74:	jb     400a60 <__libc_csu_init+0x50>
     4  0.2486 :  400a76:	mov    0x8(%rsp),%rbx
     4  0.2486 :  400a7b:	mov    0x10(%rsp),%rbp
               :  400a80:	mov    0x18(%rsp),%r12
     1  0.0622 :  400a85:	mov    0x20(%rsp),%r13
               :  400a8a:	mov    0x28(%rsp),%r14
     1  0.0622 :  400a8f:	mov    0x30(%rsp),%r15
               :  400a94:	add    $0x38,%rsp
               :  400a98:	retq   
               :  400a99:	nopl   0x0(%rax)
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .fini:
               :
0000000000400ae8 <_fini>: /* _fini total:     22  1.3673 */
    18  1.1187 :  400ae8:	sub    $0x8,%rsp
     1  0.0622 :  400aec:	callq  4005d0 <__do_global_dtors_aux>
     1  0.0622 :  400af1:	add    $0x8,%rsp
     2  0.1243 :  400af5:	retq   
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .init:
               :
00000000004004e8 <_init>: /* _init total:     20  1.2430 */
     6  0.3729 :  4004e8:	sub    $0x8,%rsp
     7  0.4351 :  4004ec:	callq  4005ac <call_gmon_start>
     3  0.1865 :  4004f1:	callq  400640 <frame_dummy>
     1  0.0622 :  4004f6:	callq  400ab0 <__do_global_ctors_aux>
               :  4004fb:	add    $0x8,%rsp
     3  0.1865 :  4004ff:	retq   
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400ab0 <__do_global_ctors_aux>: /* __do_global_ctors_aux total:     19  1.1809 */
     3  0.1865 :  400ab0:	push   %rbp
     1  0.0622 :  400ab1:	mov    %rsp,%rbp
               :  400ab4:	push   %rbx
               :  400ab5:	sub    $0x8,%rsp
               :  400ab9:	mov    0x200368(%rip),%rax        # 600e28 <__CTOR_LIST__>
    12  0.7458 :  400ac0:	cmp    $0xffffffffffffffff,%rax
               :  400ac4:	je     400adf <__do_global_ctors_aux+0x2f>
               :  400ac6:	mov    $0x600e28,%ebx
               :  400acb:	nopl   0x0(%rax,%rax,1)
               :  400ad0:	sub    $0x8,%rbx
               :  400ad4:	callq  *%rax
               :  400ad6:	mov    (%rbx),%rax
               :  400ad9:	cmp    $0xffffffffffffffff,%rax
               :  400add:	jne    400ad0 <__do_global_ctors_aux+0x20>
     1  0.0622 :  400adf:	add    $0x8,%rsp
               :  400ae3:	pop    %rbx
               :  400ae4:	leaveq 
     2  0.1243 :  400ae5:	retq   
               :  400ae6:	nop
               :  400ae7:	nop
               :
               :/home/eschulte/research/epr/topics/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000004005ac <call_gmon_start>: /* call_gmon_start total:     11  0.6837 */
     4  0.2486 :  4005ac:	sub    $0x8,%rsp
     1  0.0622 :  4005b0:	mov    0x200a29(%rip),%rax        # 600fe0 <_DYNAMIC+0x190>
     1  0.0622 :  4005b7:	test   %rax,%rax
               :  4005ba:	je     4005be <call_gmon_start+0x12>
               :  4005bc:	callq  *%rax
     3  0.1865 :  4005be:	add    $0x8,%rsp
     2  0.1243 :  4005c2:	retq   
               :  4005c3:	nop
               :  4005c4:	nop
               :  4005c5:	nop
               :  4005c6:	nop
               :  4005c7:	nop
               :  4005c8:	nop
               :  4005c9:	nop
               :  4005ca:	nop
               :  4005cb:	nop
               :  4005cc:	nop
               :  4005cd:	nop
               :  4005ce:	nop
               :  4005cf:	nop
