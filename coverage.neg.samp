/* 
 * Command line: opannotate -a coverage.neg 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: AMD64 family10, speed 2200.12 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Cycles outside of halt state) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000004006a4 <locmerge>: /* locmerge total:    250 47.2590 */
     4  0.7561 :  4006a4:	push   %rbp
     3  0.5671 :  4006a5:	mov    %rsp,%rbp
               :  4006a8:	sub    $0x40,%rsp
     2  0.3781 :  4006ac:	mov    %rdi,-0x28(%rbp)
               :  4006b0:	mov    %esi,-0x2c(%rbp)
               :  4006b3:	mov    %rdx,-0x38(%rbp)
     6  1.1342 :  4006b7:	mov    %ecx,-0x3c(%rbp)
               :  4006ba:	movl   $0x0,-0xc(%rbp)
     1  0.1890 :  4006c1:	mov    -0xc(%rbp),%eax
    12  2.2684 :  4006c4:	mov    %eax,-0x8(%rbp)
               :  4006c7:	mov    -0x8(%rbp),%eax
     2  0.3781 :  4006ca:	mov    %eax,-0x4(%rbp)
               :  4006cd:	mov    -0x3c(%rbp),%eax
               :  4006d0:	mov    -0x2c(%rbp),%edx
     1  0.1890 :  4006d3:	lea    (%rdx,%rax,1),%eax
     2  0.3781 :  4006d6:	mov    %eax,%eax
               :  4006d8:	shl    $0x2,%rax
     1  0.1890 :  4006dc:	mov    %rax,%rdi
     3  0.5671 :  4006df:	callq  400568 <malloc@plt>
               :  4006e4:	mov    %rax,-0x18(%rbp)
               :  4006e8:	jmp    400756 <locmerge+0xb2>
     6  1.1342 :  4006ea:	mov    -0x4(%rbp),%eax
    42  7.9395 :  4006ed:	shl    $0x2,%rax
     1  0.1890 :  4006f1:	add    -0x28(%rbp),%rax
               :  4006f5:	mov    (%rax),%edx
     1  0.1890 :  4006f7:	mov    -0x8(%rbp),%eax
     1  0.1890 :  4006fa:	shl    $0x2,%rax
               :  4006fe:	add    -0x38(%rbp),%rax
     1  0.1890 :  400702:	mov    (%rax),%eax
     5  0.9452 :  400704:	cmp    %eax,%edx
     1  0.1890 :  400706:	jg     400730 <locmerge+0x8c>
     4  0.7561 :  400708:	mov    -0xc(%rbp),%eax
    23  4.3478 :  40070b:	shl    $0x2,%rax
               :  40070f:	add    -0x18(%rbp),%rax
               :  400713:	mov    -0x4(%rbp),%edx
     1  0.1890 :  400716:	shl    $0x2,%rdx
               :  40071a:	add    -0x28(%rbp),%rdx
               :  40071e:	mov    (%rdx),%edx
     1  0.1890 :  400720:	mov    %edx,(%rax)
               :  400722:	addl   $0x1,-0xc(%rbp)
               :  400726:	addl   $0x1,-0x4(%rbp)
     4  0.7561 :  40072a:	subl   $0x1,-0x2c(%rbp)
               :  40072e:	jmp    400756 <locmerge+0xb2>
     1  0.1890 :  400730:	mov    -0xc(%rbp),%eax
    12  2.2684 :  400733:	shl    $0x2,%rax
               :  400737:	add    -0x18(%rbp),%rax
     3  0.5671 :  40073b:	mov    -0x8(%rbp),%edx
     5  0.9452 :  40073e:	shl    $0x2,%rdx
     1  0.1890 :  400742:	add    -0x38(%rbp),%rdx
     1  0.1890 :  400746:	mov    (%rdx),%edx
     1  0.1890 :  400748:	mov    %edx,(%rax)
               :  40074a:	addl   $0x1,-0xc(%rbp)
    16  3.0246 :  40074e:	addl   $0x1,-0x8(%rbp)
               :  400752:	subl   $0x1,-0x3c(%rbp)
     3  0.5671 :  400756:	cmpl   $0x0,-0x2c(%rbp)
    15  2.8355 :  40075a:	je     400762 <locmerge+0xbe>
     3  0.5671 :  40075c:	cmpl   $0x0,-0x3c(%rbp)
     2  0.3781 :  400760:	jne    4006ea <locmerge+0x46>
     3  0.5671 :  400762:	cmpl   $0x0,-0x2c(%rbp)
    25  4.7259 :  400766:	je     400797 <locmerge+0xf3>
               :  400768:	mov    -0x2c(%rbp),%eax
               :  40076b:	lea    0x0(,%rax,4),%rdx
     1  0.1890 :  400773:	mov    -0x4(%rbp),%eax
               :  400776:	shl    $0x2,%rax
     1  0.1890 :  40077a:	mov    %rax,%rcx
     4  0.7561 :  40077d:	add    -0x28(%rbp),%rcx
     6  1.1342 :  400781:	mov    -0xc(%rbp),%eax
               :  400784:	shl    $0x2,%rax
     2  0.3781 :  400788:	add    -0x18(%rbp),%rax
               :  40078c:	mov    %rcx,%rsi
     1  0.1890 :  40078f:	mov    %rax,%rdi
     1  0.1890 :  400792:	callq  4005a8 <memcpy@plt>
     2  0.3781 :  400797:	cmpl   $0x0,-0x3c(%rbp)
     3  0.5671 :  40079b:	je     4007cc <locmerge+0x128>
               :  40079d:	mov    -0x3c(%rbp),%eax
               :  4007a0:	lea    0x0(,%rax,4),%rdx
               :  4007a8:	mov    -0x8(%rbp),%eax
               :  4007ab:	shl    $0x2,%rax
               :  4007af:	mov    %rax,%rcx
               :  4007b2:	add    -0x38(%rbp),%rcx
               :  4007b6:	mov    -0xc(%rbp),%eax
               :  4007b9:	shl    $0x2,%rax
               :  4007bd:	add    -0x18(%rbp),%rax
               :  4007c1:	mov    %rcx,%rsi
               :  4007c4:	mov    %rax,%rdi
               :  4007c7:	callq  4005a8 <memcpy@plt>
     1  0.1890 :  4007cc:	mov    -0x18(%rbp),%rax
     8  1.5123 :  4007d0:	leaveq 
     1  0.1890 :  4007d1:	retq   
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000004007d2 <mergesort>: /* mergesort total:    197 37.2401 */
     5  0.9452 :  4007d2:	push   %rbp
    10  1.8904 :  4007d3:	mov    %rsp,%rbp
     2  0.3781 :  4007d6:	push   %rbx
               :  4007d7:	sub    $0x48,%rsp
     6  1.1342 :  4007db:	mov    %rdi,-0x48(%rbp)
               :  4007df:	mov    %esi,-0x4c(%rbp)
     3  0.5671 :  4007e2:	cmpl   $0x1,-0x4c(%rbp)
     1  0.1890 :  4007e6:	ja     4007f1 <mergesort+0x1f>
               :  4007e8:	mov    -0x48(%rbp),%rax
    10  1.8904 :  4007ec:	jmpq   40096b <mergesort+0x199>
               :  4007f1:	mov    -0x4c(%rbp),%eax
    14  2.6465 :  4007f4:	shr    %eax
     1  0.1890 :  4007f6:	mov    %eax,-0x14(%rbp)
               :  4007f9:	mov    -0x14(%rbp),%eax
     1  0.1890 :  4007fc:	mov    -0x4c(%rbp),%edx
     1  0.1890 :  4007ff:	mov    %edx,%ecx
     1  0.1890 :  400801:	sub    %eax,%ecx
               :  400803:	mov    %ecx,%eax
     1  0.1890 :  400805:	mov    %eax,%eax
               :  400807:	shl    $0x2,%rax
               :  40080b:	mov    %rax,%rdi
               :  40080e:	callq  400568 <malloc@plt>
               :  400813:	mov    %rax,-0x20(%rbp)
     2  0.3781 :  400817:	mov    -0x14(%rbp),%eax
     1  0.1890 :  40081a:	shl    $0x2,%rax
               :  40081e:	mov    %rax,%rdi
               :  400821:	callq  400568 <malloc@plt>
               :  400826:	mov    %rax,-0x28(%rbp)
     1  0.1890 :  40082a:	mov    -0x14(%rbp),%eax
     1  0.1890 :  40082d:	mov    -0x4c(%rbp),%edx
               :  400830:	mov    %edx,%ebx
               :  400832:	sub    %eax,%ebx
               :  400834:	mov    %ebx,%eax
               :  400836:	mov    %eax,%eax
     1  0.1890 :  400838:	lea    0x0(,%rax,4),%rdx
               :  400840:	mov    -0x48(%rbp),%rcx
               :  400844:	mov    -0x20(%rbp),%rax
     1  0.1890 :  400848:	mov    %rcx,%rsi
     2  0.3781 :  40084b:	mov    %rax,%rdi
     1  0.1890 :  40084e:	callq  4005a8 <memcpy@plt>
     3  0.5671 :  400853:	mov    -0x14(%rbp),%eax
     8  1.5123 :  400856:	lea    0x0(,%rax,4),%rdx
               :  40085e:	mov    -0x14(%rbp),%eax
     5  0.9452 :  400861:	mov    -0x4c(%rbp),%ecx
               :  400864:	mov    %ecx,%ebx
               :  400866:	sub    %eax,%ebx
     1  0.1890 :  400868:	mov    %ebx,%eax
               :  40086a:	mov    %eax,%eax
               :  40086c:	shl    $0x2,%rax
     2  0.3781 :  400870:	mov    %rax,%rcx
               :  400873:	add    -0x48(%rbp),%rcx
               :  400877:	mov    -0x28(%rbp),%rax
     1  0.1890 :  40087b:	mov    %rcx,%rsi
               :  40087e:	mov    %rax,%rdi
               :  400881:	callq  4005a8 <memcpy@plt>
     4  0.7561 :  400886:	mov    -0x14(%rbp),%eax
     3  0.5671 :  400889:	mov    -0x4c(%rbp),%edx
               :  40088c:	sub    %eax,%edx
               :  40088e:	mov    -0x20(%rbp),%rax
               :  400892:	mov    %edx,%esi
     1  0.1890 :  400894:	mov    %rax,%rdi
               :  400897:	callq  4007d2 <mergesort>
               :  40089c:	mov    %rax,-0x38(%rbp)
     3  0.5671 :  4008a0:	mov    -0x14(%rbp),%edx
     4  0.7561 :  4008a3:	mov    -0x28(%rbp),%rax
               :  4008a7:	mov    %edx,%esi
               :  4008a9:	mov    %rax,%rdi
     2  0.3781 :  4008ac:	callq  4007d2 <mergesort>
               :  4008b1:	mov    %rax,-0x40(%rbp)
               :  4008b5:	mov    -0x14(%rbp),%eax
               :  4008b8:	mov    -0x4c(%rbp),%edx
               :  4008bb:	mov    %edx,%ecx
               :  4008bd:	sub    %eax,%ecx
     1  0.1890 :  4008bf:	mov    %ecx,%eax
               :  4008c1:	sub    $0x1,%eax
               :  4008c4:	mov    %eax,%eax
     1  0.1890 :  4008c6:	shl    $0x2,%rax
               :  4008ca:	add    -0x38(%rbp),%rax
     1  0.1890 :  4008ce:	mov    (%rax),%edx
               :  4008d0:	mov    -0x40(%rbp),%rax
     2  0.3781 :  4008d4:	mov    (%rax),%eax
               :  4008d6:	cmp    %eax,%edx
     1  0.1890 :  4008d8:	jg     4008e4 <mergesort+0x112>
               :  4008da:	mov    -0x48(%rbp),%rax
     9  1.7013 :  4008de:	mov    %rax,-0x30(%rbp)
               :  4008e2:	jmp    400907 <mergesort+0x135>
               :  4008e4:	mov    -0x14(%rbp),%eax
    12  2.2684 :  4008e7:	mov    -0x4c(%rbp),%edx
               :  4008ea:	mov    %edx,%ebx
               :  4008ec:	sub    %eax,%ebx
     1  0.1890 :  4008ee:	mov    -0x14(%rbp),%ecx
     2  0.3781 :  4008f1:	mov    -0x40(%rbp),%rdx
               :  4008f5:	mov    -0x38(%rbp),%rax
     2  0.3781 :  4008f9:	mov    %ebx,%esi
     2  0.3781 :  4008fb:	mov    %rax,%rdi
               :  4008fe:	callq  4006a4 <locmerge>
     3  0.5671 :  400903:	mov    %rax,-0x30(%rbp)
     3  0.5671 :  400907:	mov    -0x20(%rbp),%rax
     2  0.3781 :  40090b:	cmp    -0x38(%rbp),%rax
               :  40090f:	jne    40091f <mergesort+0x14d>
               :  400911:	mov    -0x38(%rbp),%rax
     7  1.3233 :  400915:	mov    %rax,%rdi
               :  400918:	callq  400588 <free@plt>
               :  40091d:	jmp    400937 <mergesort+0x165>
               :  40091f:	mov    -0x38(%rbp),%rax
    10  1.8904 :  400923:	mov    %rax,%rdi
               :  400926:	callq  400588 <free@plt>
     1  0.1890 :  40092b:	mov    -0x20(%rbp),%rax
               :  40092f:	mov    %rax,%rdi
               :  400932:	callq  400588 <free@plt>
     3  0.5671 :  400937:	mov    -0x28(%rbp),%rax
     1  0.1890 :  40093b:	cmp    -0x40(%rbp),%rax
               :  40093f:	jne    40094f <mergesort+0x17d>
     1  0.1890 :  400941:	mov    -0x40(%rbp),%rax
     1  0.1890 :  400945:	mov    %rax,%rdi
               :  400948:	callq  400588 <free@plt>
               :  40094d:	jmp    400967 <mergesort+0x195>
     1  0.1890 :  40094f:	mov    -0x40(%rbp),%rax
     9  1.7013 :  400953:	mov    %rax,%rdi
               :  400956:	callq  400588 <free@plt>
     1  0.1890 :  40095b:	mov    -0x28(%rbp),%rax
               :  40095f:	mov    %rax,%rdi
     2  0.3781 :  400962:	callq  400588 <free@plt>
     3  0.5671 :  400967:	mov    -0x30(%rbp),%rax
     3  0.5671 :  40096b:	add    $0x48,%rsp
     6  1.1342 :  40096f:	pop    %rbx
               :  400970:	leaveq 
     3  0.5671 :  400971:	retq   
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400972 <main>: /* main total:     25  4.7259 */
               :  400972:	push   %rbp
     1  0.1890 :  400973:	mov    %rsp,%rbp
               :  400976:	push   %rbx
               :  400977:	sub    $0x28,%rsp
               :  40097b:	mov    %edi,-0x24(%rbp)
               :  40097e:	mov    %rsi,-0x30(%rbp)
     1  0.1890 :  400982:	mov    -0x24(%rbp),%eax
               :  400985:	cltq   
               :  400987:	shl    $0x2,%rax
               :  40098b:	sub    $0x1,%rax
               :  40098f:	mov    %rax,%rdi
               :  400992:	callq  400568 <malloc@plt>
               :  400997:	mov    %rax,-0x20(%rbp)
     2  0.3781 :  40099b:	movl   $0x1,-0x14(%rbp)
               :  4009a2:	jmp    4009d6 <main+0x64>
     1  0.1890 :  4009a4:	mov    -0x14(%rbp),%eax
               :  4009a7:	cltq   
               :  4009a9:	sub    $0x1,%rax
               :  4009ad:	shl    $0x2,%rax
               :  4009b1:	mov    %rax,%rbx
               :  4009b4:	add    -0x20(%rbp),%rbx
               :  4009b8:	mov    -0x14(%rbp),%eax
     1  0.1890 :  4009bb:	cltq   
               :  4009bd:	shl    $0x3,%rax
     1  0.1890 :  4009c1:	add    -0x30(%rbp),%rax
               :  4009c5:	mov    (%rax),%rax
               :  4009c8:	mov    %rax,%rdi
     3  0.5671 :  4009cb:	callq  400598 <atoi@plt>
               :  4009d0:	mov    %eax,(%rbx)
     3  0.5671 :  4009d2:	addl   $0x1,-0x14(%rbp)
               :  4009d6:	mov    -0x14(%rbp),%eax
               :  4009d9:	cmp    -0x24(%rbp),%eax
               :  4009dc:	jl     4009a4 <main+0x32>
     1  0.1890 :  4009de:	mov    -0x24(%rbp),%eax
               :  4009e1:	sub    $0x1,%eax
               :  4009e4:	mov    %eax,%edx
               :  4009e6:	mov    -0x20(%rbp),%rax
               :  4009ea:	mov    %edx,%esi
               :  4009ec:	mov    %rax,%rdi
               :  4009ef:	callq  4007d2 <mergesort>
               :  4009f4:	mov    %rax,-0x20(%rbp)
     4  0.7561 :  4009f8:	movl   $0x1,-0x14(%rbp)
               :  4009ff:	jmp    400a2c <main+0xba>
               :  400a01:	mov    -0x14(%rbp),%eax
     3  0.5671 :  400a04:	cltq   
               :  400a06:	sub    $0x1,%rax
               :  400a0a:	shl    $0x2,%rax
               :  400a0e:	add    -0x20(%rbp),%rax
               :  400a12:	mov    (%rax),%edx
               :  400a14:	mov    $0x400b3c,%eax
               :  400a19:	mov    %edx,%esi
               :  400a1b:	mov    %rax,%rdi
               :  400a1e:	mov    $0x0,%eax
               :  400a23:	callq  400548 <printf@plt>
               :  400a28:	addl   $0x1,-0x14(%rbp)
     2  0.3781 :  400a2c:	mov    -0x14(%rbp),%eax
     1  0.1890 :  400a2f:	cmp    -0x24(%rbp),%eax
     1  0.1890 :  400a32:	jl     400a01 <main+0x8f>
               :  400a34:	mov    $0xa,%edi
               :  400a39:	callq  400558 <putchar@plt>
               :  400a3e:	mov    $0x0,%eax
               :  400a43:	add    $0x28,%rsp
               :  400a47:	pop    %rbx
               :  400a48:	leaveq 
               :  400a49:	retq   
               :  400a4a:	nop
               :  400a4b:	nop
               :  400a4c:	nop
               :  400a4d:	nop
               :  400a4e:	nop
               :  400a4f:	nop
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000004005c0 <_start>: /* _start total:     21  3.9698 */
    10  1.8904 :  4005c0:	xor    %ebp,%ebp
     7  1.3233 :  4005c2:	mov    %rdx,%r9
     3  0.5671 :  4005c5:	pop    %rsi
               :  4005c6:	mov    %rsp,%rdx
               :  4005c9:	and    $0xfffffffffffffff0,%rsp
               :  4005cd:	push   %rax
               :  4005ce:	push   %rsp
               :  4005cf:	mov    $0x400a50,%r8
               :  4005d6:	mov    $0x400a60,%rcx
               :  4005dd:	mov    $0x400972,%rdi
               :  4005e4:	callq  400578 <__libc_start_main@plt>
               :  4005e9:	hlt    
     1  0.1890 :  4005ea:	nop
               :  4005eb:	nop
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
00000000004005ec <call_gmon_start>: /* call_gmon_start total:     12  2.2684 */
               :  4005ec:	sub    $0x8,%rsp
     2  0.3781 :  4005f0:	mov    0x2009e9(%rip),%rax        # 600fe0 <_DYNAMIC+0x1a0>
               :  4005f7:	test   %rax,%rax
               :  4005fa:	je     4005fe <call_gmon_start+0x12>
     5  0.9452 :  4005fc:	callq  *%rax
               :  4005fe:	add    $0x8,%rsp
     1  0.1890 :  400602:	retq   
               :  400603:	nop
     4  0.7561 :  400604:	nop
               :  400605:	nop
               :  400606:	nop
               :  400607:	nop
               :  400608:	nop
               :  400609:	nop
               :  40060a:	nop
               :  40060b:	nop
               :  40060c:	nop
               :  40060d:	nop
               :  40060e:	nop
               :  40060f:	nop
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .init:
               :
0000000000400520 <_init>: /* _init total:      7  1.3233 */
     6  1.1342 :  400520:	sub    $0x8,%rsp
     1  0.1890 :  400524:	callq  4005ec <call_gmon_start>
               :  400529:	callq  400680 <frame_dummy>
               :  40052e:	callq  400af0 <__do_global_ctors_aux>
               :  400533:	add    $0x8,%rsp
               :  400537:	retq   
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400af0 <__do_global_ctors_aux>: /* __do_global_ctors_aux total:      5  0.9452 */
               :  400af0:	push   %rbp
               :  400af1:	mov    %rsp,%rbp
               :  400af4:	push   %rbx
               :  400af5:	sub    $0x8,%rsp
               :  400af9:	mov    0x200318(%rip),%rax        # 600e18 <__CTOR_LIST__>
               :  400b00:	cmp    $0xffffffffffffffff,%rax
     1  0.1890 :  400b04:	je     400b1f <__do_global_ctors_aux+0x2f>
               :  400b06:	mov    $0x600e18,%ebx
               :  400b0b:	nopl   0x0(%rax,%rax,1)
               :  400b10:	sub    $0x8,%rbx
               :  400b14:	callq  *%rax
               :  400b16:	mov    (%rbx),%rax
               :  400b19:	cmp    $0xffffffffffffffff,%rax
               :  400b1d:	jne    400b10 <__do_global_ctors_aux+0x20>
               :  400b1f:	add    $0x8,%rsp
     2  0.3781 :  400b23:	pop    %rbx
               :  400b24:	leaveq 
     2  0.3781 :  400b25:	retq   
               :  400b26:	nop
               :  400b27:	nop
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400610 <__do_global_dtors_aux>: /* __do_global_dtors_aux total:      4  0.7561 */
               :  400610:	push   %rbp
               :  400611:	mov    %rsp,%rbp
               :  400614:	push   %rbx
               :  400615:	sub    $0x8,%rsp
               :  400619:	cmpb   $0x0,0x200a28(%rip)        # 601048 <__bss_start>
               :  400620:	jne    40066d <__do_global_dtors_aux+0x5d>
               :  400622:	mov    $0x600e30,%ebx
               :  400627:	mov    0x200a22(%rip),%rax        # 601050 <dtor_idx.7384>
               :  40062e:	sub    $0x600e28,%rbx
               :  400635:	sar    $0x3,%rbx
               :  400639:	sub    $0x1,%rbx
     1  0.1890 :  40063d:	cmp    %rbx,%rax
               :  400640:	jae    400666 <__do_global_dtors_aux+0x56>
     1  0.1890 :  400642:	nopw   0x0(%rax,%rax,1)
               :  400648:	add    $0x1,%rax
               :  40064c:	mov    %rax,0x2009fd(%rip)        # 601050 <dtor_idx.7384>
               :  400653:	callq  *0x600e28(,%rax,8)
               :  40065a:	mov    0x2009ef(%rip),%rax        # 601050 <dtor_idx.7384>
               :  400661:	cmp    %rbx,%rax
               :  400664:	jb     400648 <__do_global_dtors_aux+0x38>
     1  0.1890 :  400666:	movb   $0x1,0x2009db(%rip)        # 601048 <__bss_start>
     1  0.1890 :  40066d:	add    $0x8,%rsp
               :  400671:	pop    %rbx
               :  400672:	leaveq 
               :  400673:	retq   
               :  400674:	nopw   %cs:0x0(%rax,%rax,1)
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400a60 <__libc_csu_init>: /* __libc_csu_init total:      4  0.7561 */
               :  400a60:	mov    %rbp,-0x28(%rsp)
     2  0.3781 :  400a65:	mov    %r12,-0x20(%rsp)
               :  400a6a:	lea    0x2003a3(%rip),%rbp        # 600e14 <__init_array_end>
               :  400a71:	lea    0x20039c(%rip),%r12        # 600e14 <__init_array_end>
               :  400a78:	mov    %r13,-0x18(%rsp)
               :  400a7d:	mov    %r14,-0x10(%rsp)
               :  400a82:	mov    %r15,-0x8(%rsp)
               :  400a87:	mov    %rbx,-0x30(%rsp)
               :  400a8c:	sub    $0x38,%rsp
               :  400a90:	sub    %r12,%rbp
               :  400a93:	mov    %edi,%r13d
               :  400a96:	mov    %rsi,%r14
               :  400a99:	sar    $0x3,%rbp
               :  400a9d:	mov    %rdx,%r15
               :  400aa0:	callq  400520 <_init>
               :  400aa5:	test   %rbp,%rbp
     1  0.1890 :  400aa8:	je     400ac6 <__libc_csu_init+0x66>
               :  400aaa:	xor    %ebx,%ebx
               :  400aac:	nopl   0x0(%rax)
               :  400ab0:	mov    %r15,%rdx
               :  400ab3:	mov    %r14,%rsi
               :  400ab6:	mov    %r13d,%edi
               :  400ab9:	callq  *(%r12,%rbx,8)
               :  400abd:	add    $0x1,%rbx
               :  400ac1:	cmp    %rbp,%rbx
               :  400ac4:	jb     400ab0 <__libc_csu_init+0x50>
               :  400ac6:	mov    0x8(%rsp),%rbx
     1  0.1890 :  400acb:	mov    0x10(%rsp),%rbp
               :  400ad0:	mov    0x18(%rsp),%r12
               :  400ad5:	mov    0x20(%rsp),%r13
               :  400ada:	mov    0x28(%rsp),%r14
               :  400adf:	mov    0x30(%rsp),%r15
               :  400ae4:	add    $0x38,%rsp
               :  400ae8:	retq   
               :  400ae9:	nop
               :  400aea:	nop
               :  400aeb:	nop
               :  400aec:	nop
               :  400aed:	nop
               :  400aee:	nop
               :  400aef:	nop
               :
               :/nfs/adaptive/eschulte/research/epr/sorters/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .fini:
               :
0000000000400b28 <_fini>: /* _fini total:      4  0.7561 */
               :  400b28:	sub    $0x8,%rsp
     3  0.5671 :  400b2c:	callq  400610 <__do_global_dtors_aux>
               :  400b31:	add    $0x8,%rsp
     1  0.1890 :  400b35:	retq   
